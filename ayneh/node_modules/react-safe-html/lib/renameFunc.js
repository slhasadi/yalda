'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var getOwn = Object.getOwnPropertyDescriptor;

function renameFunc(func, name) {
  if (!getOwn) {
    return;
  }

  var desc = getOwn(func, 'name');

  if (desc && desc.configurable) {
    Object.defineProperty(func, 'name', _extends({}, desc, {
      value: name
    }));
  }
}

module.exports = renameFunc;
{"ast":null,"code":"import axios from 'axios';\nimport LocalStorageService from \"./localstorageService\";\nexport const baseURL = `https://api.ayneh.tika-team.ir/v1/`;\nexport async function Headers() {\n  let header = (await LocalStorageService.getToken()) ? {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Token ${LocalStorageService.getToken()}`\n  } : {\n    \"Content-Type\": \"application/json\"\n  };\n  return header;\n}\naxios.interceptors.request.use(config => {\n  const token = LocalStorageService.getToken();\n  if (token) {\n    config.headers['Authorization'] = 'Token ' + token;\n  }\n  // config.headers['Content-Type'] = 'application/json';\n  return config;\n}, error => {\n  Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, function (error) {\n  // console.log(\"sdfsd\",error);\n  if (error.response.status === 403) {\n    // alert(error)\n  }\n  // const originalRequest = error.config;\n\n  if (error.response.status === 401) {\n    LocalStorageService.clearToken();\n    window.location.href = \"/login\";\n    return Promise.reject(error);\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","LocalStorageService","baseURL","Headers","header","getToken","interceptors","request","use","config","token","headers","error","Promise","reject","response","status","clearToken","window","location","href"],"sources":["/Users/salehasadi/Desktop/projects/untitled folder/ayeneh/web/ayneh/src/network/index.js"],"sourcesContent":["import axios from 'axios';\nimport LocalStorageService from \"./localstorageService\";\nexport const baseURL = `https://api.ayneh.tika-team.ir/v1/`;\n\nexport async function Headers() {\n    let header = await LocalStorageService.getToken() ? \n    {\"Content-Type\": \"application/json\", \"Authorization\": `Token ${LocalStorageService.getToken()}`} \n    : \n    {\"Content-Type\": \"application/json\"};\n    return (header);\n}\n\n\naxios.interceptors.request.use(\nconfig => {\n    const token = LocalStorageService.getToken();\n    if (token) {\n        config.headers['Authorization'] = 'Token ' + token;\n    }\n    // config.headers['Content-Type'] = 'application/json';\n    return config;\n},\nerror => {\n    Promise.reject(error)\n});\n\naxios.interceptors.response.use((response) => {\n    return response\n}, function (error) {\n    // console.log(\"sdfsd\",error);\n    if ( error.response.status === 403 ){\n        // alert(error)\n    }\n    // const originalRequest = error.config;\n \n    if (error.response.status === 401 ) {\n        LocalStorageService.clearToken();\n        window.location.href=\"/login\"\n        return Promise.reject(error);\n    }\n\n\n\n    return Promise.reject(error);\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAO,MAAMC,OAAO,GAAI,oCAAmC;AAE3D,OAAO,eAAeC,OAAO,GAAG;EAC5B,IAAIC,MAAM,GAAG,OAAMH,mBAAmB,CAACI,QAAQ,EAAE,IACjD;IAAC,cAAc,EAAE,kBAAkB;IAAE,eAAe,EAAG,SAAQJ,mBAAmB,CAACI,QAAQ,EAAG;EAAC,CAAC,GAEhG;IAAC,cAAc,EAAE;EAAkB,CAAC;EACpC,OAAQD,MAAM;AAClB;AAGAJ,KAAK,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGT,mBAAmB,CAACI,QAAQ,EAAE;EAC5C,IAAIK,KAAK,EAAE;IACPD,MAAM,CAACE,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGD,KAAK;EACtD;EACA;EACA,OAAOD,MAAM;AACjB,CAAC,EACDG,KAAK,IAAI;EACLC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACzB,CAAC,CAAC;AAEFZ,KAAK,CAACM,YAAY,CAACS,QAAQ,CAACP,GAAG,CAAEO,QAAQ,IAAK;EAC1C,OAAOA,QAAQ;AACnB,CAAC,EAAE,UAAUH,KAAK,EAAE;EAChB;EACA,IAAKA,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IAChC;EAAA;EAEJ;;EAEA,IAAIJ,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAG;IAChCf,mBAAmB,CAACgB,UAAU,EAAE;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,QAAQ;IAC7B,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC;EAIA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar submittableSelector = 'input,select,textarea,keygen',\n  r20 = /%20/g,\n  rCRLF = /\\r?\\n/g,\n  _ = {\n    map: require('lodash.map')\n  };\nexports.serialize = function () {\n  // Convert form elements into name/value objects\n  var arr = this.serializeArray();\n\n  // Serialize each element into a key/value string\n  var retArr = _.map(arr, function (data) {\n    return encodeURIComponent(data.name) + '=' + encodeURIComponent(data.value);\n  });\n\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n};\nexports.serializeArray = function () {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function () {\n    var elem = this;\n    var $elem = Cheerio(elem);\n    if (elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    } else {\n      return $elem.filter(submittableSelector).toArray();\n    }\n  }).filter(\n  // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n  '[name!=\"\"]:not(:disabled)'\n  // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n  + ':not(:submit, :button, :image, :reset, :file)'\n  // and are either checked/don't have a checkable state\n  + ':matches([checked], :not(:checkbox, :radio))'\n  // Convert each of the elements to its value(s)\n  ).map(function (i, elem) {\n    var $elem = Cheerio(elem);\n    var name = $elem.attr('name');\n    var val = $elem.val();\n\n    // If there is no value set (e.g. `undefined`, `null`), then return nothing\n    if (val == null) {\n      return null;\n    } else {\n      // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n      if (Array.isArray(val)) {\n        return _.map(val, function (val) {\n          // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n          //   These can occur inside of `<textarea>'s`\n          return {\n            name: name,\n            value: val.replace(rCRLF, '\\r\\n')\n          };\n        });\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n      } else {\n        return {\n          name: name,\n          value: val.replace(rCRLF, '\\r\\n')\n        };\n      }\n    }\n    // Convert our result to an array\n  }).get();\n};","map":{"version":3,"names":["submittableSelector","r20","rCRLF","_","map","require","exports","serialize","arr","serializeArray","retArr","data","encodeURIComponent","name","value","join","replace","Cheerio","constructor","elem","$elem","find","toArray","filter","i","attr","val","Array","isArray","get"],"sources":["/Users/salehasadi/Desktop/projects/untitled folder/ayeneh/web/ayneh/node_modules/cheerio/lib/api/forms.js"],"sourcesContent":["// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar submittableSelector = 'input,select,textarea,keygen',\n    r20 = /%20/g,\n    rCRLF = /\\r?\\n/g,\n    _ = {\n      map: require('lodash.map')\n    };\n\nexports.serialize = function() {\n  // Convert form elements into name/value objects\n  var arr = this.serializeArray();\n\n  // Serialize each element into a key/value string\n  var retArr = _.map(arr, function(data) {\n    return encodeURIComponent(data.name) + '=' + encodeURIComponent(data.value);\n  });\n\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n};\n\nexports.serializeArray = function() {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function() {\n      var elem = this;\n      var $elem = Cheerio(elem);\n      if (elem.name === 'form') {\n        return $elem.find(submittableSelector).toArray();\n      } else {\n        return $elem.filter(submittableSelector).toArray();\n      }\n    }).filter(\n        // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n        '[name!=\"\"]:not(:disabled)'\n        // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        + ':not(:submit, :button, :image, :reset, :file)'\n        // and are either checked/don't have a checkable state\n        + ':matches([checked], :not(:checkbox, :radio))'\n    // Convert each of the elements to its value(s)\n    ).map(function(i, elem) {\n      var $elem = Cheerio(elem);\n      var name = $elem.attr('name');\n      var val = $elem.val();\n\n      // If there is no value set (e.g. `undefined`, `null`), then return nothing\n      if (val == null) {\n        return null;\n      } else {\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(val)) {\n          return _.map(val, function(val) {\n            // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n            //   These can occur inside of `<textarea>'s`\n            return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n          });\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        } else {\n          return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n        }\n      }\n    // Convert our result to an array\n    }).get();\n};\n"],"mappings":"AAAA;AACA;AACA,IAAIA,mBAAmB,GAAG,8BAA8B;EACpDC,GAAG,GAAG,MAAM;EACZC,KAAK,GAAG,QAAQ;EAChBC,CAAC,GAAG;IACFC,GAAG,EAAEC,OAAO,CAAC,YAAY;EAC3B,CAAC;AAELC,OAAO,CAACC,SAAS,GAAG,YAAW;EAC7B;EACA,IAAIC,GAAG,GAAG,IAAI,CAACC,cAAc,EAAE;;EAE/B;EACA,IAAIC,MAAM,GAAGP,CAAC,CAACC,GAAG,CAACI,GAAG,EAAE,UAASG,IAAI,EAAE;IACrC,OAAOC,kBAAkB,CAACD,IAAI,CAACE,IAAI,CAAC,GAAG,GAAG,GAAGD,kBAAkB,CAACD,IAAI,CAACG,KAAK,CAAC;EAC7E,CAAC,CAAC;;EAEF;EACA,OAAOJ,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,CAACC,OAAO,CAACf,GAAG,EAAE,GAAG,CAAC;AAC3C,CAAC;AAEDK,OAAO,CAACG,cAAc,GAAG,YAAW;EAClC;EACA,IAAIQ,OAAO,GAAG,IAAI,CAACC,WAAW;EAC9B,OAAO,IAAI,CAACd,GAAG,CAAC,YAAW;IACvB,IAAIe,IAAI,GAAG,IAAI;IACf,IAAIC,KAAK,GAAGH,OAAO,CAACE,IAAI,CAAC;IACzB,IAAIA,IAAI,CAACN,IAAI,KAAK,MAAM,EAAE;MACxB,OAAOO,KAAK,CAACC,IAAI,CAACrB,mBAAmB,CAAC,CAACsB,OAAO,EAAE;IAClD,CAAC,MAAM;MACL,OAAOF,KAAK,CAACG,MAAM,CAACvB,mBAAmB,CAAC,CAACsB,OAAO,EAAE;IACpD;EACF,CAAC,CAAC,CAACC,MAAM;EACL;EACA;EACA;EAAA,EACE;EACF;EAAA,EACE;EACN;EAAA,CACC,CAACnB,GAAG,CAAC,UAASoB,CAAC,EAAEL,IAAI,EAAE;IACtB,IAAIC,KAAK,GAAGH,OAAO,CAACE,IAAI,CAAC;IACzB,IAAIN,IAAI,GAAGO,KAAK,CAACK,IAAI,CAAC,MAAM,CAAC;IAC7B,IAAIC,GAAG,GAAGN,KAAK,CAACM,GAAG,EAAE;;IAErB;IACA,IAAIA,GAAG,IAAI,IAAI,EAAE;MACf,OAAO,IAAI;IACb,CAAC,MAAM;MACL;MACA,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;QACtB,OAAOvB,CAAC,CAACC,GAAG,CAACsB,GAAG,EAAE,UAASA,GAAG,EAAE;UAC9B;UACA;UACA,OAAO;YAACb,IAAI,EAAEA,IAAI;YAAEC,KAAK,EAAEY,GAAG,CAACV,OAAO,CAAEd,KAAK,EAAE,MAAM;UAAE,CAAC;QAC1D,CAAC,CAAC;QACJ;MACA,CAAC,MAAM;QACL,OAAO;UAACW,IAAI,EAAEA,IAAI;UAAEC,KAAK,EAAEY,GAAG,CAACV,OAAO,CAAEd,KAAK,EAAE,MAAM;QAAE,CAAC;MAC1D;IACF;IACF;EACA,CAAC,CAAC,CAAC2B,GAAG,EAAE;AACZ,CAAC"},"metadata":{},"sourceType":"script"}
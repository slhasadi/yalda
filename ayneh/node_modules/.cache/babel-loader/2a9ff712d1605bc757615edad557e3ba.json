{"ast":null,"code":"/**\n * Module dependencies\n */\n\nvar serialize = require('dom-serializer'),\n  select = require('css-select'),\n  parse = require('./parse'),\n  _ = {\n    merge: require('lodash.merge'),\n    defaults: require('lodash.defaults')\n  };\n\n/**\n * $.load(str)\n */\n\nexports.load = function (content, options) {\n  var Cheerio = require('./cheerio');\n  options = _.defaults(options || {}, Cheerio.prototype.options);\n  var root = parse(content, options);\n  var initialize = function (selector, context, r, opts) {\n    if (!(this instanceof initialize)) {\n      return new initialize(selector, context, r, opts);\n    }\n    opts = _.defaults(opts || {}, options);\n    return Cheerio.call(this, selector, context, r || root, opts);\n  };\n\n  // Ensure that selections created by the \"loaded\" `initialize` function are\n  // true Cheerio instances.\n  initialize.prototype = Object.create(Cheerio.prototype);\n  initialize.prototype.constructor = initialize;\n\n  // Mimic jQuery's prototype alias for plugin authors.\n  initialize.fn = initialize.prototype;\n\n  // Keep a reference to the top-level scope so we can chain methods that implicitly\n  // resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n  initialize.prototype._originalRoot = root;\n\n  // Add in the static methods\n  _.merge(initialize, exports);\n\n  // Add in the root\n  initialize._root = root;\n  // store options\n  initialize._options = options;\n  return initialize;\n};\n\n/*\n* Helper function\n*/\n\nfunction render(that, dom, options) {\n  if (!dom) {\n    if (that._root && that._root.children) {\n      dom = that._root.children;\n    } else {\n      return '';\n    }\n  } else if (typeof dom === 'string') {\n    dom = select(dom, that._root, options);\n  }\n  return serialize(dom, options);\n}\n\n/**\n * $.html([selector | dom], [options])\n */\n\nexports.html = function (dom, options) {\n  var Cheerio = require('./cheerio');\n\n  // be flexible about parameters, sometimes we call html(),\n  // with options as only parameter\n  // check dom argument for dom element specific properties\n  // assume there is no 'length' or 'type' properties in the options object\n  if (Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom)) {\n    options = dom;\n    dom = undefined;\n  }\n\n  // sometimes $.html() used without preloading html\n  // so fallback non existing options to the default ones\n  options = _.defaults(options || {}, this._options, Cheerio.prototype.options);\n  return render(this, dom, options);\n};\n\n/**\n * $.xml([selector | dom])\n */\n\nexports.xml = function (dom) {\n  var options = _.defaults({\n    xmlMode: true\n  }, this._options);\n  return render(this, dom, options);\n};\n\n/**\n * $.text(dom)\n */\n\nexports.text = function (elems) {\n  if (!elems) {\n    elems = this.root();\n  }\n  var ret = '',\n    len = elems.length,\n    elem;\n  for (var i = 0; i < len; i++) {\n    elem = elems[i];\n    if (elem.type === 'text') ret += elem.data;else if (elem.children && elem.type !== 'comment') {\n      ret += exports.text(elem.children);\n    }\n  }\n  return ret;\n};\n\n/**\n * $.parseHTML(data [, context ] [, keepScripts ])\n * Parses a string into an array of DOM nodes. The `context` argument has no\n * meaning for Cheerio, but it is maintained for API compatibility with jQuery.\n */\nexports.parseHTML = function (data, context, keepScripts) {\n  var parsed;\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n  parsed = this.load(data);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n\n  // The `children` array is used by Cheerio internally to group elements that\n  // share the same parents. When nodes created through `parseHTML` are\n  // inserted into previously-existing DOM structures, they will be removed\n  // from the `children` array. The results of `parseHTML` should remain\n  // constant across these operations, so a shallow copy should be returned.\n  return parsed.root()[0].children.slice();\n};\n\n/**\n * $.root()\n */\nexports.root = function () {\n  return this(this._root);\n};\n\n/**\n * $.contains()\n */\nexports.contains = function (container, contained) {\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n\n  // Step up the descendants, stopping when the root element is reached\n  // (signaled by `.parent` returning a reference to the same object)\n  while (contained && contained !== contained.parent) {\n    contained = contained.parent;\n    if (contained === container) {\n      return true;\n    }\n  }\n  return false;\n};","map":{"version":3,"names":["serialize","require","select","parse","_","merge","defaults","exports","load","content","options","Cheerio","prototype","root","initialize","selector","context","r","opts","call","Object","create","constructor","fn","_originalRoot","_root","_options","render","that","dom","children","html","toString","undefined","xml","xmlMode","text","elems","ret","len","length","elem","i","type","data","parseHTML","keepScripts","parsed","remove","slice","contains","container","contained","parent"],"sources":["/Users/salehasadi/Desktop/projects/untitled folder/ayeneh/web/ayneh/node_modules/cheerio/lib/static.js"],"sourcesContent":["/**\n * Module dependencies\n */\n\nvar serialize = require('dom-serializer'),\n    select = require('css-select'),\n    parse = require('./parse'),\n    _ = {\n      merge: require('lodash.merge'),\n      defaults: require('lodash.defaults')\n    };\n\n/**\n * $.load(str)\n */\n\nexports.load = function(content, options) {\n  var Cheerio = require('./cheerio');\n\n  options = _.defaults(options || {}, Cheerio.prototype.options);\n\n  var root = parse(content, options);\n\n  var initialize = function(selector, context, r, opts) {\n    if (!(this instanceof initialize)) {\n      return new initialize(selector, context, r, opts);\n    }\n    opts = _.defaults(opts || {}, options);\n    return Cheerio.call(this, selector, context, r || root, opts);\n  };\n\n  // Ensure that selections created by the \"loaded\" `initialize` function are\n  // true Cheerio instances.\n  initialize.prototype = Object.create(Cheerio.prototype);\n  initialize.prototype.constructor = initialize;\n\n  // Mimic jQuery's prototype alias for plugin authors.\n  initialize.fn = initialize.prototype;\n\n  // Keep a reference to the top-level scope so we can chain methods that implicitly\n  // resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n  initialize.prototype._originalRoot = root;\n\n  // Add in the static methods\n  _.merge(initialize, exports);\n\n  // Add in the root\n  initialize._root = root;\n  // store options\n  initialize._options = options;\n\n  return initialize;\n};\n\n/*\n* Helper function\n*/\n\nfunction render(that, dom, options) {\n  if (!dom) {\n    if (that._root && that._root.children) {\n      dom = that._root.children;\n    } else {\n      return '';\n    }\n  } else if (typeof dom === 'string') {\n    dom = select(dom, that._root, options);\n  }\n\n  return serialize(dom, options);\n}\n\n/**\n * $.html([selector | dom], [options])\n */\n\nexports.html = function(dom, options) {\n  var Cheerio = require('./cheerio');\n\n  // be flexible about parameters, sometimes we call html(),\n  // with options as only parameter\n  // check dom argument for dom element specific properties\n  // assume there is no 'length' or 'type' properties in the options object\n  if (Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom))\n  {\n    options = dom;\n    dom = undefined;\n  }\n\n  // sometimes $.html() used without preloading html\n  // so fallback non existing options to the default ones\n  options = _.defaults(options || {}, this._options, Cheerio.prototype.options);\n\n  return render(this, dom, options);\n};\n\n/**\n * $.xml([selector | dom])\n */\n\nexports.xml = function(dom) {\n  var options = _.defaults({xmlMode: true}, this._options);\n\n  return render(this, dom, options);\n};\n\n/**\n * $.text(dom)\n */\n\nexports.text = function(elems) {\n  if (!elems) {\n    elems = this.root();\n  }\n\n  var ret = '',\n      len = elems.length,\n      elem;\n\n  for (var i = 0; i < len; i++) {\n    elem = elems[i];\n    if (elem.type === 'text') ret += elem.data;\n    else if (elem.children && elem.type !== 'comment') {\n      ret += exports.text(elem.children);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * $.parseHTML(data [, context ] [, keepScripts ])\n * Parses a string into an array of DOM nodes. The `context` argument has no\n * meaning for Cheerio, but it is maintained for API compatibility with jQuery.\n */\nexports.parseHTML = function(data, context, keepScripts) {\n  var parsed;\n\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n\n  parsed = this.load(data);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n\n  // The `children` array is used by Cheerio internally to group elements that\n  // share the same parents. When nodes created through `parseHTML` are\n  // inserted into previously-existing DOM structures, they will be removed\n  // from the `children` array. The results of `parseHTML` should remain\n  // constant across these operations, so a shallow copy should be returned.\n  return parsed.root()[0].children.slice();\n};\n\n/**\n * $.root()\n */\nexports.root = function() {\n  return this(this._root);\n};\n\n/**\n * $.contains()\n */\nexports.contains = function(container, contained) {\n\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n\n  // Step up the descendants, stopping when the root element is reached\n  // (signaled by `.parent` returning a reference to the same object)\n  while (contained && contained !== contained.parent) {\n    contained = contained.parent;\n    if (contained === container) {\n      return true;\n    }\n  }\n\n  return false;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}